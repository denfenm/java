/*
6.	(Encrypt files) Encode the file by adding 5 to every byte in the file. 
Write a program that prompts the user to enter an input file name and 
an output file name and saves the encrypted version of the input file to the 
output file.
*/



import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class FileHandling {

    public static int countTokens(String file, String search) throws IOException {
        int instanceCount = 0;
        try {
        	FileReader fr = new FileReader(file);
            BufferedReader br = new BufferedReader(fr);
            Scanner s = new Scanner(br);
            s.useDelimiter("\\W");
            while (s.hasNext()) {
                if (search.equalsIgnoreCase(s.next().trim())) {
                    instanceCount++;
                }
            }
        } // try-with-resources will close the connections
        catch (IOException e) {
        	
        	System.out.println("IOException error");
        }
        return instanceCount;
    }

    public static void main(String[] args) {
    	Scanner in = new Scanner(System.in);
    	String file =args[0];
    	if(args.length <1) {
    		System.out.println("Argument not found");
    		System.exit(-1);
       
    } else {
    	System.out.println("Press enter to start");
    	String search = in.nextLine();
    	
    	do {
    	System.out.println("Enter the search string or q to exit: ");
        search = in.nextLine();
    	try {
			System.out.println("The word " + search + " appears " + countTokens(file, search) + " times in the file.");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
    	} while (!(search.equalsIgnoreCase("q")));
    	in.close();
    }
    	
    	
    	
    }}
/*import java.io.File;
import java.io.FileInputStream;
public class Sample {
   public static void main(String args[]) throws Exception{

      int count =0;
      File file = new File("data");
      FileInputStream fis = new FileInputStream(file);
      byte[] bytesArray = new byte[(int)file.length()];
      fis.read(bytesArray);
      String s = new String(bytesArray);
      String [] data = s.split(" ");
      for (int i=0; i<data.length; i++) {
         count++;
      }
      System.out.println("Number of characters in the given file are " +count);
   }
}*/
  
